/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import {
  AccountInfoStatus,
  accountInfoStatusSchema,
} from './accountInfoStatus.js';
import { BalanceType, balanceTypeSchema } from './balanceType.js';
import { CurrencyEntity, currencyEntitySchema } from './currencyEntity.js';
import {
  FiAttributeEntity,
  fiAttributeEntitySchema,
} from './fiAttributeEntity.js';
import {
  InterestRateType,
  interestRateTypeSchema,
} from './interestRateType.js';

/** Data elements included with balances specific to line of credit accounts */
export interface LineOfCreditBalances {
  /** Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution. */
  accountId?: string;
  /** The type of an account. For instance, CHECKING, SAVINGS, 401K, etc. */
  accountType?: string;
  /** Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider. */
  accountNumberDisplay?: string;
  /** Indicates the currency code used by the account. May also include currency rate. */
  currency?: CurrencyEntity;
  description?: string;
  fiAttributes?: FiAttributeEntity[];
  /** Name given by the user. Used in UIs to assist in account selection */
  nickname?: string;
  /** Marketed product name for this account.  Used in UIs to assist in account selection */
  productName?: string;
  /** The status of an account. */
  status?: AccountInfoStatus;
  /** The line of business, such as consumer, consumer joint, small business, corporate, etc. */
  lineOfBusiness?: string;
  /** ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance) */
  balanceType?: BalanceType;
  /** Interest Rate of Account */
  interestRate?: number;
  /** The type of interest rate. FIXED or VARIABLE. */
  interestRateType?: InterestRateType;
  /** Date of account’s interest rate */
  interestRateAsOf?: string;
  /** Date that last transaction occurred on account */
  lastActivityDate?: string;
  /** MICR Number */
  micrNumber?: string;
  /** Long-term persistent identity of the parent account. This is used to group accounts. */
  parentAccountId?: string;
  /** Previous Interest Rate of Account */
  priorInterestRate?: number;
  /** Account is eligible for incoming transfers */
  transferIn?: boolean;
  /** Account is eligible for outgoing transfers */
  transferOut?: boolean;
  /** As-of date of balances */
  balanceAsOf?: string;
  /** Advances APR */
  advancesApr?: number;
  /** Available cash */
  availableCash?: number;
  /** Available credit */
  availableCredit?: number;
  /** Cash advance limit */
  cashAdvanceLimit?: number;
  /** Credit limit */
  creditLine?: number;
  /** Current balance LOC */
  currentBalance?: number;
  /** Current rewards balance */
  currentRewardsBalance?: number;
  /** Finance charges */
  financeCharges?: number;
  /** Last payment amount */
  lastPaymentAmount?: number;
  /** Last payment date */
  lastPaymentDate?: string;
  /** Last Statement Balance */
  lastStmtBalance?: number;
  /** Last Statement Date */
  lastStmtDate?: string;
  /** Minimum payment amount */
  minimumPaymentAmount?: number;
  /** Amount of next payment */
  nextPaymentAmount?: number;
  /** Due date of next payment */
  nextPaymentDate?: string;
  /** Past Due Amount */
  pastDueAmount?: number;
  /** Points accrued */
  pointsAccrued?: number;
  /** Principal balance */
  principalBalance?: number;
  /** Points redeemed */
  pointsRedeemed?: number;
  /** Purchases APR */
  purchasesApr?: number;
  additionalProperties?: Record<string, unknown>;
}

export const lineOfCreditBalancesSchema: Schema<LineOfCreditBalances> = typedExpandoObject(
  {
    accountId: ['accountId', optional(string())],
    accountType: ['accountType', optional(string())],
    accountNumberDisplay: ['accountNumberDisplay', optional(string())],
    currency: ['currency', optional(lazy(() => currencyEntitySchema))],
    description: ['description', optional(string())],
    fiAttributes: [
      'fiAttributes',
      optional(array(lazy(() => fiAttributeEntitySchema))),
    ],
    nickname: ['nickname', optional(string())],
    productName: ['productName', optional(string())],
    status: ['status', optional(accountInfoStatusSchema)],
    lineOfBusiness: ['lineOfBusiness', optional(string())],
    balanceType: ['balanceType', optional(balanceTypeSchema)],
    interestRate: ['interestRate', optional(number())],
    interestRateType: ['interestRateType', optional(interestRateTypeSchema)],
    interestRateAsOf: ['interestRateAsOf', optional(string())],
    lastActivityDate: ['lastActivityDate', optional(string())],
    micrNumber: ['micrNumber', optional(string())],
    parentAccountId: ['parentAccountId', optional(string())],
    priorInterestRate: ['priorInterestRate', optional(number())],
    transferIn: ['transferIn', optional(boolean())],
    transferOut: ['transferOut', optional(boolean())],
    balanceAsOf: ['balanceAsOf', optional(string())],
    advancesApr: ['advancesApr', optional(number())],
    availableCash: ['availableCash', optional(number())],
    availableCredit: ['availableCredit', optional(number())],
    cashAdvanceLimit: ['cashAdvanceLimit', optional(number())],
    creditLine: ['creditLine', optional(number())],
    currentBalance: ['currentBalance', optional(number())],
    currentRewardsBalance: ['currentRewardsBalance', optional(number())],
    financeCharges: ['financeCharges', optional(number())],
    lastPaymentAmount: ['lastPaymentAmount', optional(number())],
    lastPaymentDate: ['lastPaymentDate', optional(string())],
    lastStmtBalance: ['lastStmtBalance', optional(number())],
    lastStmtDate: ['lastStmtDate', optional(string())],
    minimumPaymentAmount: ['minimumPaymentAmount', optional(number())],
    nextPaymentAmount: ['nextPaymentAmount', optional(number())],
    nextPaymentDate: ['nextPaymentDate', optional(string())],
    pastDueAmount: ['pastDueAmount', optional(number())],
    pointsAccrued: ['pointsAccrued', optional(number())],
    principalBalance: ['principalBalance', optional(number())],
    pointsRedeemed: ['pointsRedeemed', optional(number())],
    purchasesApr: ['purchasesApr', optional(number())],
  },
  'additionalProperties',
  optional(unknown())
);
