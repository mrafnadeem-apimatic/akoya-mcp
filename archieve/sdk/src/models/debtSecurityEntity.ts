/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import { CallType, callTypeSchema } from './callType.js';
import {
  CouponMatureFrequency,
  couponMatureFrequencySchema,
} from './couponMatureFrequency.js';
import { DebtClass, debtClassSchema } from './debtClass.js';
import { DebtType, debtTypeSchema } from './debtType.js';

/** Information about the debt security specific to the type of security */
export interface DebtSecurityEntity {
  /** Par value amount */
  parValue?: number;
  /** Debt type */
  debtType?: DebtType;
  /** Classification of debt */
  debtClass?: DebtClass;
  /** Bond coupon rate for next closest call date */
  couponRate?: number;
  /** Maturity date for next coupon */
  couponDate?: string;
  /** When coupons mature */
  couponMatureFrequency?: CouponMatureFrequency;
  /** Bond call price */
  callPrice?: number;
  /** Yield to next call */
  yieldToCall?: number;
  /** Next call date */
  callDate?: string;
  /** Type of next call */
  callType?: CallType;
  /** Yield to maturity */
  yieldToMaturity?: number;
  /** Bond Maturity date */
  bondMaturityDate?: string;
  additionalProperties?: Record<string, unknown>;
}

export const debtSecurityEntitySchema: Schema<DebtSecurityEntity> = typedExpandoObject(
  {
    parValue: ['parValue', optional(number())],
    debtType: ['debtType', optional(debtTypeSchema)],
    debtClass: ['debtClass', optional(debtClassSchema)],
    couponRate: ['couponRate', optional(number())],
    couponDate: ['couponDate', optional(string())],
    couponMatureFrequency: [
      'couponMatureFrequency',
      optional(couponMatureFrequencySchema),
    ],
    callPrice: ['callPrice', optional(number())],
    yieldToCall: ['yieldToCall', optional(number())],
    callDate: ['callDate', optional(string())],
    callType: ['callType', optional(callTypeSchema)],
    yieldToMaturity: ['yieldToMaturity', optional(number())],
    bondMaturityDate: ['bondMaturityDate', optional(string())],
  },
  'additionalProperties',
  optional(unknown())
);
