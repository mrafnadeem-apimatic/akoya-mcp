/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, isMappedValueValidForSchema, Schema } from '../../schema.js';
import {
  DepositTransactionInfo,
  depositTransactionInfoSchema,
} from '../depositTransactionInfo.js';
import {
  InsuranceTransactionInfo,
  insuranceTransactionInfoSchema,
} from '../insuranceTransactionInfo.js';
import {
  InvestmentTransactionInfo,
  investmentTransactionInfoSchema,
} from '../investmentTransactionInfo.js';
import {
  LoanTransactionInfo,
  loanTransactionInfoSchema,
} from '../loanTransactionInfo.js';
import {
  LocTransactionInfo,
  locTransactionInfoSchema,
} from '../locTransactionInfo.js';

/** This is a container type for any-of types. */
export type TransactionsEntityTransactions =
  | DepositTransactionInfo
  | LoanTransactionInfo
  | LocTransactionInfo
  | InvestmentTransactionInfo
  | InsuranceTransactionInfo;

export const transactionsEntityTransactionsSchema: Schema<TransactionsEntityTransactions> = anyOf(
  [
    depositTransactionInfoSchema,
    loanTransactionInfoSchema,
    locTransactionInfoSchema,
    investmentTransactionInfoSchema,
    insuranceTransactionInfoSchema,
  ]
);

export namespace TransactionsEntityTransactions {
  /**
   * Validation method to narrow down union type to DepositTransactionInfo type case.
   *
   * This is DepositTransactionInfo case.
   */
  export function isDepositTransactionInfo(
    value: unknown
  ): value is DepositTransactionInfo {
    return isMappedValueValidForSchema(value, depositTransactionInfoSchema);
  }

  /**
   * Validation method to narrow down union type to LoanTransactionInfo type case.
   *
   * This is LoanTransactionInfo case.
   */
  export function isLoanTransactionInfo(
    value: unknown
  ): value is LoanTransactionInfo {
    return isMappedValueValidForSchema(value, loanTransactionInfoSchema);
  }

  /**
   * Validation method to narrow down union type to LocTransactionInfo type case.
   *
   * This is LocTransactionInfo case.
   */
  export function isLocTransactionInfo(
    value: unknown
  ): value is LocTransactionInfo {
    return isMappedValueValidForSchema(value, locTransactionInfoSchema);
  }

  /**
   * Validation method to narrow down union type to InvestmentTransactionInfo type case.
   *
   * This is InvestmentTransactionInfo case.
   */
  export function isInvestmentTransactionInfo(
    value: unknown
  ): value is InvestmentTransactionInfo {
    return isMappedValueValidForSchema(value, investmentTransactionInfoSchema);
  }

  /**
   * Validation method to narrow down union type to InsuranceTransactionInfo type case.
   *
   * This is InsuranceTransactionInfo case.
   */
  export function isInsuranceTransactionInfo(
    value: unknown
  ): value is InsuranceTransactionInfo {
    return isMappedValueValidForSchema(value, insuranceTransactionInfoSchema);
  }
}
