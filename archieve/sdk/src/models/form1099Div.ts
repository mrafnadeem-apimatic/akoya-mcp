/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import {
  DescriptionAndAmount,
  descriptionAndAmountSchema,
} from './descriptionAndAmount.js';
import { Error, errorSchema } from './error.js';
import { HateoasLink, hateoasLinkSchema } from './hateoasLink.js';
import {
  StateAndLocalTaxWithholding,
  stateAndLocalTaxWithholdingSchema,
} from './stateAndLocalTaxWithholding.js';
import {
  TaxFormAttribute,
  taxFormAttributeSchema,
} from './taxFormAttribute.js';
import { TaxParty, taxPartySchema } from './taxParty.js';
import { TypeFormType, typeFormTypeSchema } from './typeFormType.js';

/** Dividends and Distributions */
export interface Form1099Div {
  /** Year for which taxes are being paid */
  taxYear?: number;
  /** True to indicate this is a corrected tax form */
  corrected?: boolean;
  /** Long-term persistent identity of the source account. Not the account number */
  accountId?: string;
  /** Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted. */
  taxFormId?: string;
  /** Date of production or delivery of the tax form */
  taxFormDate?: string;
  /** Additional explanation text or content about this tax form */
  additionalInformation?: string;
  /** Enumerated name of the tax form entity e.g. "TaxW2" */
  taxFormType?: TypeFormType;
  /** Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms. */
  issuer?: TaxParty;
  /** Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms. */
  recipient?: TaxParty;
  /** Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address. */
  attributes?: TaxFormAttribute[];
  /** Present if an error was encountered while retrieving this form */
  error?: Error;
  /** Links to retrieve this form as data or image, or to invoke other APIs */
  links?: HateoasLink[];
  /** Account number */
  accountNumber?: string;
  /** Box 1a, Total ordinary dividends */
  ordinaryDividends?: number;
  /** Box 1b, Qualified dividends */
  qualifiedDividends?: number;
  /** Box 2a, Total capital gain distributions */
  totalCapitalGain?: number;
  /** Box 2b, Unrecaptured Section 1250 gain */
  unrecaptured1250Gain?: number;
  /** Box 2c, Section 1202 gain */
  section1202Gain?: number;
  /** Box 2d, Collectibles (28%) gain */
  collectiblesGain?: number;
  /** Box 2e, Section 897 ordinary dividends */
  section897Dividends?: number;
  /** Box 2f, Section 897 capital gain */
  section897CapitalGain?: number;
  /** Box 3, Nondividend distributions */
  nonTaxableDistribution?: number;
  /** Box 4, Federal income tax withheld */
  federalTaxWithheld?: number;
  /** Box 5, Section 199A dividends */
  section199ADividends?: number;
  /** Box 6, Investment expenses */
  investmentExpenses?: number;
  /** Box 7, Foreign tax paid */
  foreignTaxPaid?: number;
  /** Box 8, Foreign country or U.S. possession */
  foreignCountry?: string;
  /** Box 9, Cash liquidation distributions */
  cashLiquidation?: number;
  /** Box 10, Noncash liquidation distributions */
  nonCashLiquidation?: number;
  /** Box 11, FATCA filing requirement */
  foreignAccountTaxCompliance?: boolean;
  /** Box 12, Exempt-interest dividends */
  taxExemptInterestDividend?: number;
  /** Box 13, Specified private activity bond interest dividends */
  specifiedPabInterestDividend?: number;
  /** Boxes 14-16, State and Local tax withholding */
  stateAndLocal?: StateAndLocalTaxWithholding[];
  /** Foreign income information */
  foreignIncomes?: DescriptionAndAmount[];
  /** Tax exempt income state information */
  stateTaxExemptIncomes?: DescriptionAndAmount[];
  /** Second TIN Notice */
  secondTinNotice?: boolean;
  additionalProperties?: Record<string, unknown>;
}

export const form1099DivSchema: Schema<Form1099Div> = typedExpandoObject(
  {
    taxYear: ['taxYear', optional(number())],
    corrected: ['corrected', optional(boolean())],
    accountId: ['accountId', optional(string())],
    taxFormId: ['taxFormId', optional(string())],
    taxFormDate: ['taxFormDate', optional(string())],
    additionalInformation: ['additionalInformation', optional(string())],
    taxFormType: ['taxFormType', optional(typeFormTypeSchema)],
    issuer: ['issuer', optional(lazy(() => taxPartySchema))],
    recipient: ['recipient', optional(lazy(() => taxPartySchema))],
    attributes: [
      'attributes',
      optional(array(lazy(() => taxFormAttributeSchema))),
    ],
    error: ['error', optional(lazy(() => errorSchema))],
    links: ['links', optional(array(lazy(() => hateoasLinkSchema)))],
    accountNumber: ['accountNumber', optional(string())],
    ordinaryDividends: ['ordinaryDividends', optional(number())],
    qualifiedDividends: ['qualifiedDividends', optional(number())],
    totalCapitalGain: ['totalCapitalGain', optional(number())],
    unrecaptured1250Gain: ['unrecaptured1250Gain', optional(number())],
    section1202Gain: ['section1202Gain', optional(number())],
    collectiblesGain: ['collectiblesGain', optional(number())],
    section897Dividends: ['section897Dividends', optional(number())],
    section897CapitalGain: ['section897CapitalGain', optional(number())],
    nonTaxableDistribution: ['nonTaxableDistribution', optional(number())],
    federalTaxWithheld: ['federalTaxWithheld', optional(number())],
    section199ADividends: ['section199ADividends', optional(number())],
    investmentExpenses: ['investmentExpenses', optional(number())],
    foreignTaxPaid: ['foreignTaxPaid', optional(number())],
    foreignCountry: ['foreignCountry', optional(string())],
    cashLiquidation: ['cashLiquidation', optional(number())],
    nonCashLiquidation: ['nonCashLiquidation', optional(number())],
    foreignAccountTaxCompliance: [
      'foreignAccountTaxCompliance',
      optional(boolean()),
    ],
    taxExemptInterestDividend: [
      'taxExemptInterestDividend',
      optional(number()),
    ],
    specifiedPabInterestDividend: [
      'specifiedPabInterestDividend',
      optional(number()),
    ],
    stateAndLocal: [
      'stateAndLocal',
      optional(array(lazy(() => stateAndLocalTaxWithholdingSchema))),
    ],
    foreignIncomes: [
      'foreignIncomes',
      optional(array(lazy(() => descriptionAndAmountSchema))),
    ],
    stateTaxExemptIncomes: [
      'stateTaxExemptIncomes',
      optional(array(lazy(() => descriptionAndAmountSchema))),
    ],
    secondTinNotice: ['secondTinNotice', optional(boolean())],
  },
  'additionalProperties',
  optional(unknown())
);
