/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import { DateAndAmount, dateAndAmountSchema } from './dateAndAmount.js';
import {
  DescriptionAndAmount,
  descriptionAndAmountSchema,
} from './descriptionAndAmount.js';
import { Error, errorSchema } from './error.js';
import { HateoasLink, hateoasLinkSchema } from './hateoasLink.js';
import {
  TaxFormAttribute,
  taxFormAttributeSchema,
} from './taxFormAttribute.js';
import { TaxParty, taxPartySchema } from './taxParty.js';
import { TypeFormType, typeFormTypeSchema } from './typeFormType.js';

/** Business Income Statement for IRS Form 1040 Schedule C */
export interface BusinessIncomeStatement {
  /** Year for which taxes are being paid */
  taxYear?: number;
  /** True to indicate this is a corrected tax form */
  corrected?: boolean;
  /** Long-term persistent identity of the source account. Not the account number */
  accountId?: string;
  /** Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted. */
  taxFormId?: string;
  /** Date of production or delivery of the tax form */
  taxFormDate?: string;
  /** Additional explanation text or content about this tax form */
  additionalInformation?: string;
  /** Enumerated name of the tax form entity e.g. "TaxW2" */
  taxFormType?: TypeFormType;
  /** Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms. */
  issuer?: TaxParty;
  /** Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms. */
  recipient?: TaxParty;
  /** Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address. */
  attributes?: TaxFormAttribute[];
  /** Present if an error was encountered while retrieving this form */
  error?: Error;
  /** Links to retrieve this form as data or image, or to invoke other APIs */
  links?: HateoasLink[];
  /** Box C, Business name */
  businessName?: string;
  /** Box 1, Gross receipts or sales */
  sales?: number;
  /** Box 2, Returns and allowances */
  returns?: number;
  /** Box 8, Other income */
  otherIncome?: DescriptionAndAmount[];
  /** Box 8, Advertising */
  advertising?: number;
  /** Box 9, Car and truck expenses */
  carAndTruck?: number;
  /** Box 10, Commissions and fees */
  commissions?: number;
  /** Box 11, Contract labor */
  contractLabor?: number;
  /** Box 12, Depletion */
  depletion?: number;
  /** Box 13, Depreciation */
  depreciation?: number;
  /** Box 14, Employee benefit programs */
  employeeBenefits?: number;
  /** Box 15, Insurance */
  insurance?: number;
  /** Box 16a, Mortgage interest */
  mortgageInterest?: number;
  /** Box 16b, Other interest */
  otherInterest?: number;
  /** Box 17, Legal and professional services */
  legal?: number;
  /** Box 18, Office expense */
  office?: number;
  /** Box 19, Pension and profit-sharing plans */
  pension?: number;
  /** Box 20a, Equipment rent */
  equipmentRent?: number;
  /** Box 20b, Other rent */
  otherRent?: number;
  /** Box 21, Repairs and maintenance */
  repairs?: number;
  /** Box 22, Supplies */
  supplies?: number;
  /** Box 23, Taxes and licenses */
  taxes?: number;
  /** Box 24a, Travel */
  travel?: number;
  /** Box 24b, Deductible meals */
  meals?: number;
  /** Box 25, Utilities */
  utilities?: number;
  /** Box 26, Wages */
  wages?: number;
  /** Box 27, Other expenses */
  otherExpenses?: DescriptionAndAmount[];
  /** Box 35, Inventory at beginning of year */
  beginningInventory?: number;
  /** Box 36, Purchases */
  purchases?: number;
  /** Box 37, Cost of labor */
  costOfLabor?: number;
  /** Box 38, Materials and supplies */
  materials?: number;
  /** Box 39, Other costs */
  otherCosts?: DescriptionAndAmount[];
  /** Box 41, Inventory at end of year */
  endingInventory?: number;
  /** Capital expenditures, for use in calculating Depreciation */
  capitalExpenditures?: DateAndAmount[];
  additionalProperties?: Record<string, unknown>;
}

export const businessIncomeStatementSchema: Schema<BusinessIncomeStatement> = typedExpandoObject(
  {
    taxYear: ['taxYear', optional(number())],
    corrected: ['corrected', optional(boolean())],
    accountId: ['accountId', optional(string())],
    taxFormId: ['taxFormId', optional(string())],
    taxFormDate: ['taxFormDate', optional(string())],
    additionalInformation: ['additionalInformation', optional(string())],
    taxFormType: ['taxFormType', optional(typeFormTypeSchema)],
    issuer: ['issuer', optional(lazy(() => taxPartySchema))],
    recipient: ['recipient', optional(lazy(() => taxPartySchema))],
    attributes: [
      'attributes',
      optional(array(lazy(() => taxFormAttributeSchema))),
    ],
    error: ['error', optional(lazy(() => errorSchema))],
    links: ['links', optional(array(lazy(() => hateoasLinkSchema)))],
    businessName: ['businessName', optional(string())],
    sales: ['sales', optional(number())],
    returns: ['returns', optional(number())],
    otherIncome: [
      'otherIncome',
      optional(array(lazy(() => descriptionAndAmountSchema))),
    ],
    advertising: ['advertising', optional(number())],
    carAndTruck: ['carAndTruck', optional(number())],
    commissions: ['commissions', optional(number())],
    contractLabor: ['contractLabor', optional(number())],
    depletion: ['depletion', optional(number())],
    depreciation: ['depreciation', optional(number())],
    employeeBenefits: ['employeeBenefits', optional(number())],
    insurance: ['insurance', optional(number())],
    mortgageInterest: ['mortgageInterest', optional(number())],
    otherInterest: ['otherInterest', optional(number())],
    legal: ['legal', optional(number())],
    office: ['office', optional(number())],
    pension: ['pension', optional(number())],
    equipmentRent: ['equipmentRent', optional(number())],
    otherRent: ['otherRent', optional(number())],
    repairs: ['repairs', optional(number())],
    supplies: ['supplies', optional(number())],
    taxes: ['taxes', optional(number())],
    travel: ['travel', optional(number())],
    meals: ['meals', optional(number())],
    utilities: ['utilities', optional(number())],
    wages: ['wages', optional(number())],
    otherExpenses: [
      'otherExpenses',
      optional(array(lazy(() => descriptionAndAmountSchema))),
    ],
    beginningInventory: ['beginningInventory', optional(number())],
    purchases: ['purchases', optional(number())],
    costOfLabor: ['costOfLabor', optional(number())],
    materials: ['materials', optional(number())],
    otherCosts: [
      'otherCosts',
      optional(array(lazy(() => descriptionAndAmountSchema))),
    ],
    endingInventory: ['endingInventory', optional(number())],
    capitalExpenditures: [
      'capitalExpenditures',
      optional(array(lazy(() => dateAndAmountSchema))),
    ],
  },
  'additionalProperties',
  optional(unknown())
);
