/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import { Error, errorSchema } from './error.js';
import { HateoasLink, hateoasLinkSchema } from './hateoasLink.js';
import {
  TaxFormAttribute,
  taxFormAttributeSchema,
} from './taxFormAttribute.js';
import { TaxParty, taxPartySchema } from './taxParty.js';
import { TypeFormType, typeFormTypeSchema } from './typeFormType.js';

/** Contributions of Motor Vehicles, Boats, and Airplanes */
export interface Form1098C {
  /** Year for which taxes are being paid */
  taxYear?: number;
  /** True to indicate this is a corrected tax form */
  corrected?: boolean;
  /** Long-term persistent identity of the source account. Not the account number */
  accountId?: string;
  /** Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted. */
  taxFormId?: string;
  /** Date of production or delivery of the tax form */
  taxFormDate?: string;
  /** Additional explanation text or content about this tax form */
  additionalInformation?: string;
  /** Enumerated name of the tax form entity e.g. "TaxW2" */
  taxFormType?: TypeFormType;
  /** Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms. */
  issuer?: TaxParty;
  /** Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms. */
  recipient?: TaxParty;
  /** Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address. */
  attributes?: TaxFormAttribute[];
  /** Present if an error was encountered while retrieving this form */
  error?: Error;
  /** Links to retrieve this form as data or image, or to invoke other APIs */
  links?: HateoasLink[];
  /** Box 1, Date of contribution */
  dateOfContribution?: string;
  /** Box 2a, Odometer mileage */
  odometerMileage?: number;
  /** Box 2b, Year */
  carYear?: number;
  /** Box 2c, Make */
  make?: string;
  /** Box 2d, Model */
  model?: string;
  /** Box 3, Vehicle or other identification number */
  vin?: string;
  /** Box 4a, Donee certifies that vehicle was sold in arm's length transaction to unrelated party */
  armsLengthTransaction?: boolean;
  /** Box 4b, Date of sale */
  dateOfSale?: string;
  /** Box 4c, Gross proceeds from sale (see instructions) */
  grossProceeds?: number;
  /** Box 5a, Donee certifies that vehicle will not be transferred for money, other property, or services before completion of material improvements or significant intervening use */
  notTransferredBefore?: boolean;
  /** Box 5b, Donee certifies that vehicle is to be transferred to a needy individual for significantly below fair market value in furtherance of donee's charitable purpose */
  needyIndividual?: boolean;
  /** Box 5c, Donee certifies the following detailed description of material improvements or significant intervening use and duration of use */
  descriptionOfImprovements?: string;
  /** Box 6a, Did you provide goods or services in exchange for the vehicle? Yes */
  goodsInExchange?: boolean;
  /** Box 6b, Value of goods and services provided in exchange for the vehicle */
  valueOfExchange?: number;
  /** Box 6c, If this box is checked, donee certifies that the goods and services consisted solely of intangible religious benefits */
  intangibleReligious?: boolean;
  /** Box 6c, Describe the goods and services, if any, that were provided */
  descriptionOfGoods?: string;
  /** Box 7, Under the law, the donor may not claim a deduction of more than $500 for this vehicle if this box is checked */
  maxDeductionApplies?: boolean;
  additionalProperties?: Record<string, unknown>;
}

export const form1098CSchema: Schema<Form1098C> = typedExpandoObject(
  {
    taxYear: ['taxYear', optional(number())],
    corrected: ['corrected', optional(boolean())],
    accountId: ['accountId', optional(string())],
    taxFormId: ['taxFormId', optional(string())],
    taxFormDate: ['taxFormDate', optional(string())],
    additionalInformation: ['additionalInformation', optional(string())],
    taxFormType: ['taxFormType', optional(typeFormTypeSchema)],
    issuer: ['issuer', optional(lazy(() => taxPartySchema))],
    recipient: ['recipient', optional(lazy(() => taxPartySchema))],
    attributes: [
      'attributes',
      optional(array(lazy(() => taxFormAttributeSchema))),
    ],
    error: ['error', optional(lazy(() => errorSchema))],
    links: ['links', optional(array(lazy(() => hateoasLinkSchema)))],
    dateOfContribution: ['dateOfContribution', optional(string())],
    odometerMileage: ['odometerMileage', optional(number())],
    carYear: ['carYear', optional(number())],
    make: ['make', optional(string())],
    model: ['model', optional(string())],
    vin: ['vin', optional(string())],
    armsLengthTransaction: ['armsLengthTransaction', optional(boolean())],
    dateOfSale: ['dateOfSale', optional(string())],
    grossProceeds: ['grossProceeds', optional(number())],
    notTransferredBefore: ['notTransferredBefore', optional(boolean())],
    needyIndividual: ['needyIndividual', optional(boolean())],
    descriptionOfImprovements: [
      'descriptionOfImprovements',
      optional(string()),
    ],
    goodsInExchange: ['goodsInExchange', optional(boolean())],
    valueOfExchange: ['valueOfExchange', optional(number())],
    intangibleReligious: ['intangibleReligious', optional(boolean())],
    descriptionOfGoods: ['descriptionOfGoods', optional(string())],
    maxDeductionApplies: ['maxDeductionApplies', optional(boolean())],
  },
  'additionalProperties',
  optional(unknown())
);
