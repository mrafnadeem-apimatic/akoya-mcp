/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import {
  LoanPaymentFrequency,
  loanPaymentFrequencySchema,
} from './loanPaymentFrequency.js';

/** Information about an investment loan. */
export interface InvestmentLoanEntity {
  /** Unique identifier for this loan */
  loanId?: string;
  /** Description */
  loanDescription?: string;
  /** Initial loan balance amount */
  initialLoanBalance?: number;
  /** Start date of the loan */
  loanStartDate?: string;
  /** Current loan principal balance amount */
  currentLoanBalance?: number;
  /** Date and time of current loan balance */
  dateAsOf?: string;
  /** Loan annual interest rate for the loan */
  loanRate?: number;
  /** Loan payment amount */
  loanPaymentAmount?: number;
  loanPaymentFrequency?: LoanPaymentFrequency;
  /** Initial number of loan payments */
  loanPaymentInitial?: number;
  /** Remaining number of loan payments */
  loanPaymentsRemaining?: number;
  /** Expected loan end date */
  loanMaturityDate?: string;
  /** Total interest paid to date on this loan */
  loanInterestToDate?: number;
  /** Total projected interest to be paid on this loan */
  loanTotalProjectedInterest?: number;
  /** The next payment date for the loan */
  loanNextPaymentDate?: string;
  additionalProperties?: Record<string, unknown>;
}

export const investmentLoanEntitySchema: Schema<InvestmentLoanEntity> = typedExpandoObject(
  {
    loanId: ['loanId', optional(string())],
    loanDescription: ['loanDescription', optional(string())],
    initialLoanBalance: ['initialLoanBalance', optional(number())],
    loanStartDate: ['loanStartDate', optional(string())],
    currentLoanBalance: ['currentLoanBalance', optional(number())],
    dateAsOf: ['dateAsOf', optional(string())],
    loanRate: ['loanRate', optional(number())],
    loanPaymentAmount: ['loanPaymentAmount', optional(number())],
    loanPaymentFrequency: [
      'loanPaymentFrequency',
      optional(loanPaymentFrequencySchema),
    ],
    loanPaymentInitial: ['loanPaymentInitial', optional(number())],
    loanPaymentsRemaining: ['loanPaymentsRemaining', optional(number())],
    loanMaturityDate: ['loanMaturityDate', optional(string())],
    loanInterestToDate: ['loanInterestToDate', optional(number())],
    loanTotalProjectedInterest: [
      'loanTotalProjectedInterest',
      optional(number()),
    ],
    loanNextPaymentDate: ['loanNextPaymentDate', optional(string())],
  },
  'additionalProperties',
  optional(unknown())
);
