/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import {
  FiAttributeEntity,
  fiAttributeEntitySchema,
} from './fiAttributeEntity.js';
import { TaxData, taxDataSchema } from './taxData.js';
import { TaxParty, taxPartySchema } from './taxParty.js';
import { TypeDataType, typeDataTypeSchema } from './typeDataType.js';

/** The TaxStatement json for a single tax document containing one or more tax reporting forms for the customer */
export interface TaxStatement {
  /** Year for which taxes are being paid */
  taxYear?: number;
  /** Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id */
  taxStatementId?: string;
  /** Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms */
  issuer?: TaxParty;
  /** Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms */
  recipient?: TaxParty;
  /** Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format) */
  taxDataType?: TypeDataType;
  /** The list of data contents for all included tax forms, response should include one of `forms` or `pdf` */
  forms?: TaxData[];
  /** PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms` */
  pdf?: string;
  /** Additional tax statement attributes that the provider wishes to include */
  attributes?: FiAttributeEntity[];
  additionalProperties?: Record<string, unknown>;
}

export const taxStatementSchema: Schema<TaxStatement> = typedExpandoObject(
  {
    taxYear: ['taxYear', optional(number())],
    taxStatementId: ['taxStatementId', optional(string())],
    issuer: ['issuer', optional(lazy(() => taxPartySchema))],
    recipient: ['recipient', optional(lazy(() => taxPartySchema))],
    taxDataType: ['taxDataType', optional(typeDataTypeSchema)],
    forms: ['forms', optional(array(lazy(() => taxDataSchema)))],
    pdf: ['pdf', optional(string())],
    attributes: [
      'attributes',
      optional(array(lazy(() => fiAttributeEntitySchema))),
    ],
  },
  'additionalProperties',
  optional(unknown())
);
