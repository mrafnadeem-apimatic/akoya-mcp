/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  boolean,
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import { SaleTermType, saleTermTypeSchema } from './saleTermType.js';

/** Tax information for a single cryptocurrency transaction. If reported on Form 1099-B, use Tax1099B and SecurityDetail instead of this entity. */
export interface GainOrLossFromCryptocurrencyTransaction {
  /** Cryptocurrency name (e.g. Bitcoin) */
  cryptocurrencyName?: string;
  /** Cryptocurrency abbreviation or symbol (e.g. BTC) */
  symbol?: string;
  /** Quantity (e.g. 0.0125662) */
  quantity?: number;
  /** Description of property (1099-B box 1a) */
  saleDescription?: string;
  /** Date acquired (1099-B box 1b) */
  dateAcquired?: string;
  /** Acquired on various dates (1099-B box 1b) */
  variousDatesAcquired?: boolean;
  /** Date sold or disposed (1099-B box 1c) */
  dateOfSale?: string;
  /** Proceeds (not price per share, 1099-B box 1d) */
  salesPrice?: number;
  /** Cost or other basis (1099-B box 1e) */
  costBasis?: number;
  /** LONG or SHORT (1099-B box 2) */
  longOrShort?: SaleTermType;
  additionalProperties?: Record<string, unknown>;
}

export const gainOrLossFromCryptocurrencyTransactionSchema: Schema<GainOrLossFromCryptocurrencyTransaction> = typedExpandoObject(
  {
    cryptocurrencyName: ['cryptocurrencyName', optional(string())],
    symbol: ['symbol', optional(string())],
    quantity: ['quantity', optional(number())],
    saleDescription: ['saleDescription', optional(string())],
    dateAcquired: ['dateAcquired', optional(string())],
    variousDatesAcquired: ['variousDatesAcquired', optional(boolean())],
    dateOfSale: ['dateOfSale', optional(string())],
    salesPrice: ['salesPrice', optional(number())],
    costBasis: ['costBasis', optional(number())],
    longOrShort: ['longOrShort', optional(saleTermTypeSchema)],
  },
  'additionalProperties',
  optional(unknown())
);
