/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  lazy,
  optional,
  Schema,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import {
  LocalTaxWithholding,
  localTaxWithholdingSchema,
} from './localTaxWithholding.js';
import { StateCode, stateCodeSchema } from './stateCode.js';
import {
  StateTaxWithholding,
  stateTaxWithholdingSchema,
} from './stateTaxWithholding.js';

/** Income in a state and/or locality and its or their tax withholding */
export interface StateAndLocalTaxWithholding {
  /** State two-digit code */
  stateCode?: StateCode;
  /** Amount of state income tax withheld */
  state?: StateTaxWithholding;
  /** Amount of local income tax withheld, if any */
  local?: LocalTaxWithholding;
  additionalProperties?: Record<string, unknown>;
}

export const stateAndLocalTaxWithholdingSchema: Schema<StateAndLocalTaxWithholding> = typedExpandoObject(
  {
    stateCode: ['stateCode', optional(stateCodeSchema)],
    state: ['state', optional(lazy(() => stateTaxWithholdingSchema))],
    local: ['local', optional(lazy(() => localTaxWithholdingSchema))],
  },
  'additionalProperties',
  optional(unknown())
);
