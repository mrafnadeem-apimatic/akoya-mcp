/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import { Error, errorSchema } from './error.js';
import { HateoasLink, hateoasLinkSchema } from './hateoasLink.js';
import {
  TaxFormAttribute,
  taxFormAttributeSchema,
} from './taxFormAttribute.js';
import { TaxParty, taxPartySchema } from './taxParty.js';
import { TypeFormType, typeFormTypeSchema } from './typeFormType.js';

/** IRA Contribution Information */
export interface Form5498 {
  /** Year for which taxes are being paid */
  taxYear?: number;
  /** True to indicate this is a corrected tax form */
  corrected?: boolean;
  /** Long-term persistent identity of the source account. Not the account number */
  accountId?: string;
  /** Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted. */
  taxFormId?: string;
  /** Date of production or delivery of the tax form */
  taxFormDate?: string;
  /** Additional explanation text or content about this tax form */
  additionalInformation?: string;
  /** Enumerated name of the tax form entity e.g. "TaxW2" */
  taxFormType?: TypeFormType;
  /** Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms. */
  issuer?: TaxParty;
  /** Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms. */
  recipient?: TaxParty;
  /** Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address. */
  attributes?: TaxFormAttribute[];
  /** Present if an error was encountered while retrieving this form */
  error?: Error;
  /** Links to retrieve this form as data or image, or to invoke other APIs */
  links?: HateoasLink[];
  /** Account number */
  accountNumber?: string;
  /** Box 1, IRA contributions */
  iraContributions?: number;
  /** Box 2, Rollover contributions */
  rolloverContributions?: number;
  /** Box 3, Roth IRA conversion amount */
  rothIraConversion?: number;
  /** Box 4, Recharacterized contributions */
  recharacterizedContributions?: number;
  /** Box 5, Fair market value of account */
  fairMarketValue?: number;
  /** Box 6, Life insurance cost included in box 1 */
  lifeInsuranceCost?: number;
  /** Box 7a, IRA */
  ira?: boolean;
  /** Box 7b, SEP */
  sep?: boolean;
  /** Box 7c, SIMPLE */
  simple?: boolean;
  /** Box 7d, Roth IRA */
  rothIra?: boolean;
  /** Box 8, SEP contributions */
  sepContributions?: number;
  /** Box 9, SIMPLE contributions */
  simpleContributions?: number;
  /** Box 10, Roth IRA contributions */
  rothIraContributions?: number;
  /** Box 11, If checked, required minimum distribution for next year */
  rmdNextYear?: boolean;
  /** Box 12a, RMD date */
  rmdDate?: string;
  /** Box 12b, RMD amount */
  rmdAmount?: number;
  /** Box 13a, Postponed contribution */
  postponedContribution?: number;
  /** Box 13b, Year */
  postponedYear?: number;
  /** Box 13c, Code */
  postponedCode?: string;
  /** Box 14a, Repayments */
  repayments?: number;
  /** Box 14b, Code */
  repayCode?: string;
  /** Box 15a, FMV of certain specified assets */
  fmvSpecifiedAssets?: number;
  /** Box 15b, Code(s) */
  specifiedCodes?: string;
  additionalProperties?: Record<string, unknown>;
}

export const form5498Schema: Schema<Form5498> = typedExpandoObject(
  {
    taxYear: ['taxYear', optional(number())],
    corrected: ['corrected', optional(boolean())],
    accountId: ['accountId', optional(string())],
    taxFormId: ['taxFormId', optional(string())],
    taxFormDate: ['taxFormDate', optional(string())],
    additionalInformation: ['additionalInformation', optional(string())],
    taxFormType: ['taxFormType', optional(typeFormTypeSchema)],
    issuer: ['issuer', optional(lazy(() => taxPartySchema))],
    recipient: ['recipient', optional(lazy(() => taxPartySchema))],
    attributes: [
      'attributes',
      optional(array(lazy(() => taxFormAttributeSchema))),
    ],
    error: ['error', optional(lazy(() => errorSchema))],
    links: ['links', optional(array(lazy(() => hateoasLinkSchema)))],
    accountNumber: ['accountNumber', optional(string())],
    iraContributions: ['iraContributions', optional(number())],
    rolloverContributions: ['rolloverContributions', optional(number())],
    rothIraConversion: ['rothIraConversion', optional(number())],
    recharacterizedContributions: [
      'recharacterizedContributions',
      optional(number()),
    ],
    fairMarketValue: ['fairMarketValue', optional(number())],
    lifeInsuranceCost: ['lifeInsuranceCost', optional(number())],
    ira: ['ira', optional(boolean())],
    sep: ['sep', optional(boolean())],
    simple: ['simple', optional(boolean())],
    rothIra: ['rothIra', optional(boolean())],
    sepContributions: ['sepContributions', optional(number())],
    simpleContributions: ['simpleContributions', optional(number())],
    rothIraContributions: ['rothIraContributions', optional(number())],
    rmdNextYear: ['rmdNextYear', optional(boolean())],
    rmdDate: ['rmdDate', optional(string())],
    rmdAmount: ['rmdAmount', optional(number())],
    postponedContribution: ['postponedContribution', optional(number())],
    postponedYear: ['postponedYear', optional(number())],
    postponedCode: ['postponedCode', optional(string())],
    repayments: ['repayments', optional(number())],
    repayCode: ['repayCode', optional(string())],
    fmvSpecifiedAssets: ['fmvSpecifiedAssets', optional(number())],
    specifiedCodes: ['specifiedCodes', optional(string())],
  },
  'additionalProperties',
  optional(unknown())
);
