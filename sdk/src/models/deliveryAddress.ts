/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import {
  Iso3166CountryCode,
  iso3166CountryCodeSchema,
} from './iso3166CountryCode.js';

/** Physical mail address associated with the account */
export interface DeliveryAddress {
  /** Address line 1 */
  line1?: string;
  /** Address line 2 */
  line2?: string;
  /** Address line 3 */
  line3?: string;
  /** City */
  city?: string;
  /** State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode' */
  region?: string;
  /** Postal code */
  postalCode?: string;
  /** Country code */
  country?: Iso3166CountryCode;
  /** Type of address location. One of BUSINESS, HOME, MAILING */
  type?: string;
  additionalProperties?: Record<string, unknown>;
}

export const deliveryAddressSchema: Schema<DeliveryAddress> = typedExpandoObject(
  {
    line1: ['line1', optional(string())],
    line2: ['line2', optional(string())],
    line3: ['line3', optional(string())],
    city: ['city', optional(string())],
    region: ['region', optional(string())],
    postalCode: ['postalCode', optional(string())],
    country: ['country', optional(iso3166CountryCodeSchema)],
    type: ['type', optional(string())],
  },
  'additionalProperties',
  optional(unknown())
);
