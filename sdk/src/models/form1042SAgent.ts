/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  lazy,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import { Address, addressSchema } from './address.js';
import { BusinessName, businessNameSchema } from './businessName.js';
import { IndividualName, individualNameSchema } from './individualName.js';
import { TaxPartyType, taxPartyTypeSchema } from './taxPartyType.js';
import {
  TelephoneNumberPlusExtension,
  telephoneNumberPlusExtensionSchema,
} from './telephoneNumberPlusExtension.js';

/**
 * One of various persons or businesses involved in Form 1042-S reporting. Use
 *   * `tin` for
 *     * Box 12a, Withholding Agent EIN,
 *     * Box 13e, Recipient U.S. TIN,
 *     * Box 14b, Primary Withholding Agent EIN,
 *     * Box 15a, Intermediary or flow-through entity EIN,
 *     * Box 16b, Payer TIN
 *   * `individualName` or `businessName` for
 *     * Box 12d, Withholding Agent name,
 *     * Box 13a, Recipient name,
 *     * Box 14a, Primary Withholding Agent name,
 *     * Box 15d, Intermediary or flow-through entity name,
 *     * Box 16a, Payer name
 *   * `address.country` for
 *     * Box 12f, Withholding Agent Country code,
 *     * Box 13b, Recipient Country code,
 *     * Box 15f, Intermediary or flow-through entity Country code
 *   * `address` for
 *     * Boxes 12h-i, Withholding Agent Address,
 *     * Boxes 13c-d, Recipient Address,
 *     * Boxes 15h-i, Intermediary or flow-through entity Address
 */
export interface Form1042SAgent {
  /** Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient */
  tin?: string;
  /** Type of issuer or recipient legal entity, as "BUSINESS" or "INDIVIDUAL". Commonly BUSINESS for issuer and INDIVIDUAL for recipient */
  partyType?: TaxPartyType;
  /** Individual issuer or recipient name */
  individualName?: IndividualName;
  /** Business issuer or recipient name */
  businessName?: BusinessName;
  /** Issuer or recipient address */
  address?: Address;
  /** Issuer or recipient telephone number */
  phone?: TelephoneNumberPlusExtension;
  /** Issuer or recipient email address. (Additional information, not part of IRS forms) */
  email?: string;
  /**
   * Ch. 3 status code,
   *   * Box 12b, Withholding Agent,
   *   * Box 13f, Recipient,
   *   * Box 15b, Intermediary or flow-through entity,
   *   * Box 16d, Payer
   */
  ch3StatusCode?: string;
  /**
   * Ch. 4 status code,
   *   * Box 12c, Withholding Agent,
   *   * Box 13g, Recipient,
   *   * Box 15c, Intermediary or flow-through entity,
   *   * Box 16e, Payer
   */
  ch4StatusCode?: string;
  /**
   * Agent's Global Intermediary Identification Number (GIIN),
   *   * Box 12e, Withholding Agent,
   *   * Box 13h, Recipient,
   *   * Box 15e, Intermediary or flow-through entity,
   *   * Box 16c, Payer
   */
  giin?: string;
  /**
   * Foreign tax identification number, if any,
   *   * Box 12g, Withholding Agent,
   *   * Box 13i, Recipient,
   *   * Box 15g, Intermediary or flow-through entity
   */
  foreignTin?: string;
  additionalProperties?: Record<string, unknown>;
}

export const form1042SAgentSchema: Schema<Form1042SAgent> = typedExpandoObject(
  {
    tin: ['tin', optional(string())],
    partyType: ['partyType', optional(taxPartyTypeSchema)],
    individualName: [
      'individualName',
      optional(lazy(() => individualNameSchema)),
    ],
    businessName: ['businessName', optional(lazy(() => businessNameSchema))],
    address: ['address', optional(lazy(() => addressSchema))],
    phone: ['phone', optional(lazy(() => telephoneNumberPlusExtensionSchema))],
    email: ['email', optional(string())],
    ch3StatusCode: ['ch3StatusCode', optional(string())],
    ch4StatusCode: ['ch4StatusCode', optional(string())],
    giin: ['giin', optional(string())],
    foreignTin: ['foreignTin', optional(string())],
  },
  'additionalProperties',
  optional(unknown())
);
