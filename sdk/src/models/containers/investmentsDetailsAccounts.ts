/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, isMappedValueValidForSchema, Schema } from '../../schema.js';
import {
  AnnuityBalanceInfo,
  annuityBalanceInfoSchema,
} from '../annuityBalanceInfo.js';
import {
  DepositBalanceInfo,
  depositBalanceInfoSchema,
} from '../depositBalanceInfo.js';
import {
  InsuranceBalanceInfo,
  insuranceBalanceInfoSchema,
} from '../insuranceBalanceInfo.js';
import {
  InvestmentBalanceInfo,
  investmentBalanceInfoSchema,
} from '../investmentBalanceInfo.js';
import { LoanBalanceInfo, loanBalanceInfoSchema } from '../loanBalanceInfo.js';
import { LocBalanceInfo, locBalanceInfoSchema } from '../locBalanceInfo.js';

/** This is a container type for any-of types. */
export type InvestmentsDetailsAccounts =
  | InvestmentBalanceInfo
  | DepositBalanceInfo
  | LoanBalanceInfo
  | LocBalanceInfo
  | InsuranceBalanceInfo
  | AnnuityBalanceInfo;

export const investmentsDetailsAccountsSchema: Schema<InvestmentsDetailsAccounts> = anyOf(
  [
    investmentBalanceInfoSchema,
    depositBalanceInfoSchema,
    loanBalanceInfoSchema,
    locBalanceInfoSchema,
    insuranceBalanceInfoSchema,
    annuityBalanceInfoSchema,
  ]
);

export namespace InvestmentsDetailsAccounts {
  /**
   * Validation method to narrow down union type to InvestmentBalanceInfo type case.
   *
   * This is InvestmentBalanceInfo case.
   */
  export function isInvestmentBalanceInfo(
    value: unknown
  ): value is InvestmentBalanceInfo {
    return isMappedValueValidForSchema(value, investmentBalanceInfoSchema);
  }

  /**
   * Validation method to narrow down union type to DepositBalanceInfo type case.
   *
   * This is DepositBalanceInfo case.
   */
  export function isDepositBalanceInfo(
    value: unknown
  ): value is DepositBalanceInfo {
    return isMappedValueValidForSchema(value, depositBalanceInfoSchema);
  }

  /**
   * Validation method to narrow down union type to LoanBalanceInfo type case.
   *
   * This is LoanBalanceInfo case.
   */
  export function isLoanBalanceInfo(value: unknown): value is LoanBalanceInfo {
    return isMappedValueValidForSchema(value, loanBalanceInfoSchema);
  }

  /**
   * Validation method to narrow down union type to LocBalanceInfo type case.
   *
   * This is LocBalanceInfo case.
   */
  export function isLocBalanceInfo(value: unknown): value is LocBalanceInfo {
    return isMappedValueValidForSchema(value, locBalanceInfoSchema);
  }

  /**
   * Validation method to narrow down union type to InsuranceBalanceInfo type case.
   *
   * This is InsuranceBalanceInfo case.
   */
  export function isInsuranceBalanceInfo(
    value: unknown
  ): value is InsuranceBalanceInfo {
    return isMappedValueValidForSchema(value, insuranceBalanceInfoSchema);
  }

  /**
   * Validation method to narrow down union type to AnnuityBalanceInfo type case.
   *
   * This is AnnuityBalanceInfo case.
   */
  export function isAnnuityBalanceInfo(
    value: unknown
  ): value is AnnuityBalanceInfo {
    return isMappedValueValidForSchema(value, annuityBalanceInfoSchema);
  }
}
