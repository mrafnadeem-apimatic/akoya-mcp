/**
 * Akoya
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, isMappedValueValidForSchema, Schema } from '../../schema.js';
import {
  AnnuityAccountInfo,
  annuityAccountInfoSchema,
} from '../annuityAccountInfo.js';
import {
  DepositAccountInfo,
  depositAccountInfoSchema,
} from '../depositAccountInfo.js';
import {
  InsuranceAccountInfo,
  insuranceAccountInfoSchema,
} from '../insuranceAccountInfo.js';
import {
  InvestmentAccountInfo,
  investmentAccountInfoSchema,
} from '../investmentAccountInfo.js';
import { LoanAccountInfo, loanAccountInfoSchema } from '../loanAccountInfo.js';
import { LocAccountInfo, locAccountInfoSchema } from '../locAccountInfo.js';

/** This is a container type for any-of types. */
export type AkoyaAccountInfoProductAccounts =
  | DepositAccountInfo
  | LoanAccountInfo
  | LocAccountInfo
  | InvestmentAccountInfo
  | InsuranceAccountInfo
  | AnnuityAccountInfo;

export const akoyaAccountInfoProductAccountsSchema: Schema<AkoyaAccountInfoProductAccounts> = anyOf(
  [
    depositAccountInfoSchema,
    loanAccountInfoSchema,
    locAccountInfoSchema,
    investmentAccountInfoSchema,
    insuranceAccountInfoSchema,
    annuityAccountInfoSchema,
  ]
);

export namespace AkoyaAccountInfoProductAccounts {
  /**
   * Validation method to narrow down union type to DepositAccountInfo type case.
   *
   * This is DepositAccountInfo case.
   */
  export function isDepositAccountInfo(
    value: unknown
  ): value is DepositAccountInfo {
    return isMappedValueValidForSchema(value, depositAccountInfoSchema);
  }

  /**
   * Validation method to narrow down union type to LoanAccountInfo type case.
   *
   * This is LoanAccountInfo case.
   */
  export function isLoanAccountInfo(value: unknown): value is LoanAccountInfo {
    return isMappedValueValidForSchema(value, loanAccountInfoSchema);
  }

  /**
   * Validation method to narrow down union type to LocAccountInfo type case.
   *
   * This is LocAccountInfo case.
   */
  export function isLocAccountInfo(value: unknown): value is LocAccountInfo {
    return isMappedValueValidForSchema(value, locAccountInfoSchema);
  }

  /**
   * Validation method to narrow down union type to InvestmentAccountInfo type case.
   *
   * This is InvestmentAccountInfo case.
   */
  export function isInvestmentAccountInfo(
    value: unknown
  ): value is InvestmentAccountInfo {
    return isMappedValueValidForSchema(value, investmentAccountInfoSchema);
  }

  /**
   * Validation method to narrow down union type to InsuranceAccountInfo type case.
   *
   * This is InsuranceAccountInfo case.
   */
  export function isInsuranceAccountInfo(
    value: unknown
  ): value is InsuranceAccountInfo {
    return isMappedValueValidForSchema(value, insuranceAccountInfoSchema);
  }

  /**
   * Validation method to narrow down union type to AnnuityAccountInfo type case.
   *
   * This is AnnuityAccountInfo case.
   */
  export function isAnnuityAccountInfo(
    value: unknown
  ): value is AnnuityAccountInfo {
    return isMappedValueValidForSchema(value, annuityAccountInfoSchema);
  }
}
